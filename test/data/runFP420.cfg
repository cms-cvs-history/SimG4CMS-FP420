process FP420Test  = {
 ####### include services
### include "Configuration/ReleaseValidation/data/Services.cfi"
  ########## initialize  MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"

#   include "FWCore/MessageService/data/MessageLogger.cfi"
#   replace MessageLogger.cout.threshold = "ERROR"
#   replace MessageLogger.cerr.default.limit = 10



#        service = MessageLogger
#        { 
#	        untracked vstring destinations = {"cout"}
#		PSet cout = { PSet default = { int32 limit = 0 }}
#
#        }


#	service = MessageLogger
#	{
#      	untracked vstring destinations = {"warning.txt","error.txt","info.txt","debugmessages.txt"}
#
#      	vstring categories = {  "FP420Sim" }
#	vstring debugModules = { "*" }
#	PSet error.txt         = {string threshold = "ERROR"  }
#	PSet warning.txt       = {string threshold = "WARNING"}
#	PSet info.txt          = {string threshold = "INFO"  }
#      	PSet debugmessages.txt = {string threshold = "DEBUG"
#				PSet INFO     = { int32 limit = 0 }
#				PSet DEBUG    = { int32 limit = 0 }
#				PSet FP420Sim = { int32 limit = 1000000 }
#				}
#   	}

   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 123456789
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 98765432
	 untracked uint32 g4SimHits  = 11
	 untracked uint32 mix        = 12345   
      }
   }

#        service = RandomNumberGeneratorService
#        {
#        untracked uint32 sourceSeed = 135799753
#        PSet moduleSeeds =
#                {
#                 untracked uint32 VtxSmeared = 123456789
#                 untracked uint32 g4SimHits = 9876
#                }
#        }


        include "SimGeneral/HepPDTESSource/data/pdt.cfi"
	source = FlatRandomEGunSource { 
		untracked int32 maxEvents = 10
		untracked PSet PGunParameters = {
			untracked vint32 PartID = {2212} 
			untracked double MinEta = 8.5
			untracked double MaxEta = 9.9
			untracked double MinPhi = -3.14159265358979323846
			untracked double MaxPhi = 3.14159265358979323846
			untracked double MinE   = 7000.
			untracked double MaxE   = 7000.
		}
		untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
	}


# Vertex smearing
#
# There're 3 types of Vertex smearing module (Gauss, Flat, BeamProfile);
# the cff's are available for each one :
# Configuration/StandardSequences/data/VtxSmearedGauss.cff
# Configuration/StandardSequences/data/VtxSmearedNoSmear.cff
# Configuration/StandardSequences/data/VtxSmearedFlat.cff
# Configuration/StandardSequences/data/VtxSmearedBeamPreofile.cff
# Currently, we suggest using Gaussian vertex smearing

        module VtxSmeared = VertexGenerator
        {
                string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
                double MeanX = -2.2    // in cm
                double MeanY = 0.      // in cm
                double MeanZ = -200.0  // in cm
                double SigmaX = 0.0015
                double SigmaY = 0.0015
                double SigmaZ = 10.0  // in cm (as in COBRA/OSCAR)
        }

#   	module VtxSmeared = VertexGenerator 
#   	{
#    	string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
#    	 	double MeanX = -22.    // in mm 
#    	 	double MeanY = 0.      // in mm  
#    	 	double MeanZ = -2000.  // in mm
#    	 	double SigmaX = 0.015
#    	 	double SigmaY = 0.015
#    	 	double SigmaZ = 10.0  // in mm (as in COBRA/OSCAR)
#    	}
#  
###############################################
#
# Seeds start
        # Vtx Smearing
#        include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"
#include "Configuration/StandardSequences/data/VtxSmearedGauss.cff"
#include "Configuration/StandardSequences/data/VtxSmearedNoSmear.cff"
#include "Configuration/StandardSequences/data/VtxSmearedFlat.cff"
#include "Configuration/StandardSequences/data/VtxSmearedBeamProfile.cff"



# Initialize geometry with XML files:
	#Geometry
        include "SimG4CMS/FP420/test/data/FP420GeometryXML.cfi"
####include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"

# Initialize magnetic field: 
	#Magnetic Field
#	include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
# You can set Mag Field to 0
#
#include "Configuration/StandardSequences/data/UseZeroBField.cff"



# Seeds end
#


#  include "SimG4Core/Application/data/SimG4Object.cfi"
#
###############################################
        module o1 = PoolOutputModule {untracked string fileName ="simfp420event.root"} 

#        include "SimG4Core/Application/data/g4SimHits.cfi"
        include "SimG4CMS/FP420/test/data/SimG4Object.cfi"
         replace g4SimHits.UseMagneticField = false
         replace g4SimHits.Physics.DefaultCutValue = 10.
          replace g4SimHits.Generator.ApplyPtCuts =  true
          replace g4SimHits.Generator.ApplyPhiCuts =  true
          replace g4SimHits.Generator.MinEtaCut =  8.4
          replace g4SimHits.Generator.MaxEtaCut =  10.0
        replace g4SimHits.Watchers = {
                    {    string type            = "FP420Test"
                        PSet FP420Test =
                        {
                                  int32 Verbosity     = 1
                                  string FDataLabel =  "defaultData"
                                  string FOutputFile = "TheAnlysis.root"
                                  string FRecreateFile = "RECREATE"
                        }
 
 		     }
        }
	path p1 = { VtxSmeared, g4SimHits }
	endpath outpath = { o1 }

	service = Timing {}
	service = Tracer {}
}		
###############################################
