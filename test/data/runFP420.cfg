process FP420Test  = {
 ####### include services
  include "FWCore/MessageLogger/data/MessageLogger.cfi"


   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 123456789
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 98765432
	 untracked uint32 g4SimHits  = 11
	 untracked uint32 mix        = 12345   
      }
   }

######################################################################

        include "SimGeneral/HepPDTESSource/data/pdt.cfi"
        untracked PSet maxEvents = {untracked int32 input = 100}
	source = FlatRandomEGunSource { 
		untracked PSet PGunParameters = {
			untracked vint32 PartID = {2212} 
 			untracked double MinEta = 8.7
 			untracked double MaxEta = 9.9
			untracked double MinPhi = 3.053
			untracked double MaxPhi = 3.227
			untracked double MinE   = 6930.
			untracked double MaxE   = 7000.
		}
		untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
	}


# Vertex smearing
#
# There're 3 types of Vertex smearing module (Gauss, Flat, BeamProfile);
# the cff's are available for each one :
# Configuration/StandardSequences/data/VtxSmearedGauss.cff
# Configuration/StandardSequences/data/VtxSmearedNoSmear.cff
# Configuration/StandardSequences/data/VtxSmearedFlat.cff
# Configuration/StandardSequences/data/VtxSmearedBeamPreofile.cff
# Currently, we suggest using Gaussian vertex smearing

	include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"
	replace VtxSmeared.MeanX = -1.5       // in cm
	replace VtxSmeared.MeanY =  0.      // in cm
	replace VtxSmeared.MeanZ = 41000.0  // in cm
	replace VtxSmeared.SigmaX = 0.0015
	replace VtxSmeared.SigmaY = 0.0015
	replace VtxSmeared.SigmaZ = 10.0  // in cm (as in COBRA/OSCAR)

#   	module VtxSmeared = VertexGenerator 
#   	{
#    	string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
#    	 	double MeanX = -22.    // in mm 
#    	 	double MeanY = 0.      // in mm  
#    	 	double MeanZ = -2000.  // in mm
#    	 	double SigmaX = 0.015
#    	 	double SigmaY = 0.015
#    	 	double SigmaZ = 10.0  // in mm (as in COBRA/OSCAR)
#    	}
#  


# Initialize geometry with XML files:
	#Geometry
#include "Geometry/FP420CommonData/data/cmsFP420GeometryXML.cfi"
include "Geometry/FP420CommonData/data/FP420GeometryXML.cfi"

# Initialize magnetic field: 
	#Magnetic Field
#	include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
# You can set Mag Field to 0
#
#include "Configuration/StandardSequences/data/UseZeroBField.cff"



# Seeds end
#


#  include "SimG4Core/Application/data/SimG4Object.cfi"
#
###############################################
        module o1 = PoolOutputModule {untracked string fileName ="simfp420event.root"} 
#        module o1 = PoolOutputModule {untracked string fileName ="cmsfp420event.root"} 

        include "SimG4Core/Application/data/g4SimHits.cfi"
###############################################
#         replace g4SimHits.NonBeamEvent = true
         replace g4SimHits.UseMagneticField = false
#         replace g4SimHits.Physics.DefaultCutValue = 1000.
          replace g4SimHits.Generator.ApplyPtCuts =  false
          replace g4SimHits.Generator.ApplyPhiCuts =  true
          replace g4SimHits.Generator.ApplyEtaCuts =  false
###############################################
        replace g4SimHits.Watchers = {
                    {    string type            = "FP420Test"
                        PSet FP420Test =
                        {
                                  int32 Verbosity     = 1
                                  string FDataLabel =  "defaultData"
                                  string FOutputFile = "TheAnlysis.root"
                                  string FRecreateFile = "RECREATE"
                        }
 
 		     }
        }
	path p1 = { VtxSmeared, g4SimHits }
	endpath outpath = { o1 }

	service = Timing {}
	service = Tracer {}
}		
###############################################
